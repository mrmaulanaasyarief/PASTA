<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Pemesanan extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pemesanan_model');
    } 

    /*
     * Listing of pemesanans
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('pemesanan/index?');
        $config['total_rows'] = $this->Pemesanan_model->get_all_pemesanans_count();
        $this->pagination->initialize($config);

        $data['pemesanans'] = $this->Pemesanan_model->get_all_pemesanans($params);
        
        $data['_view'] = 'pemesanan/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new pemesanan
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('id_user','Id User','required');
		$this->form_validation->set_rules('tanggal_pemesanan','Tanggal Pemesanan','required');
		$this->form_validation->set_rules('durasi','Durasi','required|integer|greater_than[0]');
		$this->form_validation->set_rules('status_pemesanan','Status Pemesanan','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_user' => $this->input->post('id_user'),
				'status_pemesanan' => $this->input->post('status_pemesanan'),
				'tanggal_pemesanan' => $this->input->post('tanggal_pemesanan'),
				'durasi' => $this->input->post('durasi'),
				'total_item' => $this->input->post('total_item'),
				'total_harga' => $this->input->post('total_harga'),
            );
            
            $pemesanan_id = $this->Pemesanan_model->add_pemesanan($params);
            redirect('pemesanan/index');
        }
        else
        {
			$this->load->model('User_model');
			$data['all_users'] = $this->User_model->get_all_users();
            
            $data['_view'] = 'pemesanan/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a pemesanan
     */
    function edit($id_pemesanan)
    {   
        // check if the pemesanan exists before trying to edit it
        $data['pemesanan'] = $this->Pemesanan_model->get_pemesanan($id_pemesanan);
        
        if(isset($data['pemesanan']['id_pemesanan']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('id_user','Id User','required');
			$this->form_validation->set_rules('tanggal_pemesanan','Tanggal Pemesanan','required');
			$this->form_validation->set_rules('durasi','Durasi','required|integer|greater_than[0]');
			$this->form_validation->set_rules('status_pemesanan','Status Pemesanan','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_user' => $this->input->post('id_user'),
					'status_pemesanan' => $this->input->post('status_pemesanan'),
					'tanggal_pemesanan' => $this->input->post('tanggal_pemesanan'),
					'durasi' => $this->input->post('durasi'),
					'total_item' => $this->input->post('total_item'),
					'total_harga' => $this->input->post('total_harga'),
                );

                $this->Pemesanan_model->update_pemesanan($id_pemesanan,$params);            
                redirect('pemesanan/index');
            }
            else
            {
				$this->load->model('User_model');
				$data['all_users'] = $this->User_model->get_all_users();

                $data['_view'] = 'pemesanan/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The pemesanan you are trying to edit does not exist.');
    } 

    /*
     * Deleting pemesanan
     */
    function remove($id_pemesanan)
    {
        $pemesanan = $this->Pemesanan_model->get_pemesanan($id_pemesanan);

        // check if the pemesanan exists before trying to delete it
        if(isset($pemesanan['id_pemesanan']))
        {
            $this->Pemesanan_model->delete_pemesanan($id_pemesanan);
            redirect('pemesanan/index');
        }
        else
            show_error('The pemesanan you are trying to delete does not exist.');
    }
    
}
