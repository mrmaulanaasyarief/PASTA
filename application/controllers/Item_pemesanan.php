<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Item_pemesanan extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Item_pemesanan_model');
    } 

    /*
     * Listing of item_pemesanans
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('item_pemesanan/index?');
        $config['total_rows'] = $this->Item_pemesanan_model->get_all_item_pemesanans_count();
        $this->pagination->initialize($config);

        $data['item_pemesanans'] = $this->Item_pemesanan_model->get_all_item_pemesanans($params);
        
        $data['_view'] = 'item_pemesanan/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new item_pemesanan
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('id_pemesanan','Id Pemesanan','required');
		$this->form_validation->set_rules('id_barang','Id Barang','required');
		$this->form_validation->set_rules('kuantitas','Kuantitas','required|numeric|greater_than[0]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_pemesanan' => $this->input->post('id_pemesanan'),
				'id_barang' => $this->input->post('id_barang'),
				'kuantitas' => $this->input->post('kuantitas'),
				'harga' => $this->input->post('harga'),
				'total_harga' => $this->input->post('total_harga'),
            );
            
            $item_pemesanan_id = $this->Item_pemesanan_model->add_item_pemesanan($params);
            redirect('item_pemesanan/index');
        }
        else
        {
			$this->load->model('Pemesanan_model');
			$data['all_pemesanans'] = $this->Pemesanan_model->get_all_pemesanans();

			$this->load->model('Barang_model');
			$data['all_barangs'] = $this->Barang_model->get_all_barangs();
            
            $data['_view'] = 'item_pemesanan/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a item_pemesanan
     */
    function edit($id_item)
    {   
        // check if the item_pemesanan exists before trying to edit it
        $data['item_pemesanan'] = $this->Item_pemesanan_model->get_item_pemesanan($id_item);
        
        if(isset($data['item_pemesanan']['id_item']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('id_pemesanan','Id Pemesanan','required');
			$this->form_validation->set_rules('id_barang','Id Barang','required');
			$this->form_validation->set_rules('kuantitas','Kuantitas','required|numeric|greater_than[0]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_pemesanan' => $this->input->post('id_pemesanan'),
					'id_barang' => $this->input->post('id_barang'),
					'kuantitas' => $this->input->post('kuantitas'),
					'harga' => $this->input->post('harga'),
					'total_harga' => $this->input->post('total_harga'),
                );

                $this->Item_pemesanan_model->update_item_pemesanan($id_item,$params);            
                redirect('item_pemesanan/index');
            }
            else
            {
				$this->load->model('Pemesanan_model');
				$data['all_pemesanans'] = $this->Pemesanan_model->get_all_pemesanans();

				$this->load->model('Barang_model');
				$data['all_barangs'] = $this->Barang_model->get_all_barangs();

                $data['_view'] = 'item_pemesanan/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The item_pemesanan you are trying to edit does not exist.');
    } 

    /*
     * Deleting item_pemesanan
     */
    function remove($id_item)
    {
        $item_pemesanan = $this->Item_pemesanan_model->get_item_pemesanan($id_item);

        // check if the item_pemesanan exists before trying to delete it
        if(isset($item_pemesanan['id_item']))
        {
            $this->Item_pemesanan_model->delete_item_pemesanan($id_item);
            redirect('item_pemesanan/index');
        }
        else
            show_error('The item_pemesanan you are trying to delete does not exist.');
    }
    
}
